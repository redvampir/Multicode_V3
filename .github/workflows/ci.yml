name: CI

on:
  push:
  pull_request:

jobs:
  backend:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        env:
          RUSTUP_MAX_RETRIES: 10
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libglib2.0-dev libgtk-3-dev libsoup-3.0-dev libwebkit2gtk-4.1-dev pkg-config
      - name: Set PKG_CONFIG_PATH
        if: runner.os == 'Linux'
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Check formatting
        run: cargo fmt --all -- --check
        working-directory: backend
      - name: Lint backend
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: backend
      - name: Build backend documentation
        run: |
          set -o pipefail
          cargo doc --no-deps 2>&1 | tee doc-build.log
        working-directory: backend
      - name: Audit Rust dependencies
        run: cargo audit
        working-directory: backend
      - name: Build backend
        run: cargo build --verbose
        working-directory: backend
      - name: Build backend release
        run: |
          set -o pipefail
          cargo build --release 2>&1 | tee release-build.log
        working-directory: backend
      - name: Run backend tests
        run: cargo test --all-features -- --nocapture
        working-directory: backend
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Audit npm workspaces
        run: npm audit --workspaces
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: TypeScript type check
        run: |
          set -o pipefail
          npx tsc --noEmit 2>&1 | tee tsc.log
        working-directory: frontend
      - name: Audit npm dependencies
        run: npm audit
        working-directory: frontend
      - name: Check dependencies
        run: npx depcheck
        working-directory: frontend
      - name: Lint frontend
        run: npm run lint -- --max-warnings=0
        working-directory: frontend
      - name: Build frontend
        run: npm run build --verbose
        working-directory: frontend
      - name: Run frontend tests
        run: npm test -- --coverage
        working-directory: frontend
      - name: Run frontend e2e tests
        run: npm run e2e
        working-directory: frontend
      - name: Upload frontend coverage
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: frontend/coverage
  lsp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install
        working-directory: plugins/lsp
      - name: Audit npm dependencies
        run: npm audit
        working-directory: plugins/lsp
      - name: Check dependencies
        run: npx depcheck
        working-directory: plugins/lsp
      - name: Lint lsp
        run: npm run lint
        working-directory: plugins/lsp
      - name: Run lsp tests
        run: npm test
        working-directory: plugins/lsp
