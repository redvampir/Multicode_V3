name: CI

on:
  push:
  pull_request:

jobs:
  core-desktop:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        env:
          RUSTUP_MAX_RETRIES: 10
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev libgtk-3-dev libsoup-3.0-dev libwebkit2gtk-4.1-dev pkg-config
      - name: Set PKG_CONFIG_PATH
        if: runner.os == 'Linux'
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
      - name: Core and desktop quality
        run: |
          LOG_FILE="core-desktop-ci.log"
          : > "$LOG_FILE"
          run() {
            local cmd="$1"
            echo "+ $cmd" >> "$LOG_FILE"
            if ! err=$(bash -c "$cmd" 2>&1); then
              echo "$err" >> "$LOG_FILE"
              local path=$(printf '%s\n' "$err" | grep -oE '[^ :]+\.[a-z]+:[0-9]+' | head -n1)
              echo "::error file=${path:-core-desktop} step=$cmd::failed" >> "$LOG_FILE"
              return 1
            else
              echo "$err" >> "$LOG_FILE"
            fi
          }
          for crate in core desktop; do
            pushd "$crate" >/dev/null
            run "cargo fmt --all -- --check"
            run "cargo clippy --all-targets -- -D warnings"
            run "cargo test --all-features"
            popd >/dev/null
          done
          cat "$LOG_FILE"
        continue-on-error: true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: core-desktop-log-${{ matrix.os }}
          path: core-desktop-ci.log
  node-workspaces:
    continue-on-error: true
    strategy:
      matrix:
        workdir: [plugins/lsp]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: 18 }
      - name: Node quality
        run: bash scripts/ci_node.sh ${{ matrix.workdir }}
        continue-on-error: true
      - name: Compute safe artifact name
        run: echo "SAFE_WORKDIR=${{ matrix.workdir }}" | tr '/' '-' >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SAFE_WORKDIR }}-log
          path: ${{ matrix.workdir }}-ci.log
