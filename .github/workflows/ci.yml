name: CI

on:
  push:
  pull_request:

jobs:
  legacy_backend:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        env:
          RUSTUP_MAX_RETRIES: 10
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev libgtk-3-dev libsoup-3.0-dev libwebkit2gtk-4.1-dev pkg-config
      - name: Set PKG_CONFIG_PATH
        if: runner.os == 'Linux'
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Legacy backend quality
        run: bash scripts/ci_backend.sh
        continue-on-error: true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: legacy-backend-log-${{ matrix.os }}
          path: legacy-backend-ci.log
  node-workspaces:
    continue-on-error: true
    strategy:
      matrix:
        workdir: [frontend, plugins/lsp]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: 18 }
      - name: Node quality
        run: bash scripts/ci_node.sh ${{ matrix.workdir }}
        continue-on-error: true
      - name: Compute safe artifact name
        run: echo "SAFE_WORKDIR=${{ matrix.workdir }}" | tr '/' '-' >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.SAFE_WORKDIR }}-log
          path: ${{ matrix.workdir }}-ci.log
  desktop-build:
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev libgtk-3-dev libsoup-3.0-dev libwebkit2gtk-4.1-dev pkg-config
      - name: Set PKG_CONFIG_PATH
        if: runner.os == 'Linux'
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
      - name: Check environment
        if: runner.os != 'macOS'
        run: npm run check-env
      - name: Build backend
        run: cargo build --release --manifest-path legacy-backend/Cargo.toml
      - name: Ensure backend binary path exists
        if: ${{ success() }}
        run: |
          ls legacy-backend/target/release/
          test -e legacy-backend/target/release/backend || test -e legacy-backend/target/release/backend.exe
        shell: bash
      - name: Build debug
        if: ${{ success() }}
        run: npm run build:debug
        working-directory: frontend
      - name: Build release
        if: ${{ success() }}
        run: npm run build:release -- --no-bundle
        working-directory: frontend
